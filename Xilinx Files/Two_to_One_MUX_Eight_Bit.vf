////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Two_to_One_MUX_Eight_Bit.vf
// /___/   /\     Timestamp : 11/16/2022 18:11:21
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog E:/Projects/Xilinx/DigitalDesign_3rd_Year/Two_to_One_MUX_Eight_Bit.vf -w E:/Projects/Xilinx/DigitalDesign_3rd_Year/Two_to_One_MUX_Eight_Bit.sch
//Design Name: Two_to_One_MUX_Eight_Bit
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module Two_to_One_MUX_Eight_Bit(A, 
                                B, 
                                RESET, 
                                SEL, 
                                M_OUT);

    input [3:0] A;
    input [7:0] B;
    input RESET;
    input SEL;
   output [7:0] M_OUT;
   
   wire XLXN_17;
   wire XLXN_37;
   wire XLXN_38;
   wire XLXN_39;
   wire XLXN_40;
   wire XLXN_41;
   wire XLXN_42;
   wire XLXN_43;
   wire XLXN_44;
   wire XLXN_45;
   wire XLXN_46;
   wire XLXN_49;
   wire XLXN_50;
   wire XLXN_52;
   wire XLXN_53;
   wire XLXN_55;
   wire XLXN_56;
   wire XLXN_57;
   wire XLXN_58;
   wire XLXN_59;
   wire XLXN_60;
   wire XLXN_61;
   wire XLXN_62;
   wire XLXN_63;
   wire XLXN_65;
   wire XLXN_75;
   
   AND2  XLXI_6 (.I0(A[0]), 
                .I1(XLXN_17), 
                .O(XLXN_37));
   AND2  XLXI_7 (.I0(B[0]), 
                .I1(SEL), 
                .O(XLXN_38));
   AND2  XLXI_8 (.I0(A[1]), 
                .I1(XLXN_17), 
                .O(XLXN_39));
   AND2  XLXI_9 (.I0(B[1]), 
                .I1(SEL), 
                .O(XLXN_40));
   AND2  XLXI_10 (.I0(A[2]), 
                 .I1(XLXN_17), 
                 .O(XLXN_41));
   AND2  XLXI_11 (.I0(B[2]), 
                 .I1(SEL), 
                 .O(XLXN_42));
   AND2  XLXI_12 (.I0(A[3]), 
                 .I1(XLXN_17), 
                 .O(XLXN_43));
   AND2  XLXI_13 (.I0(B[3]), 
                 .I1(SEL), 
                 .O(XLXN_44));
   AND2  XLXI_14 (.I0(XLXN_75), 
                 .I1(XLXN_17), 
                 .O(XLXN_45));
   AND2  XLXI_15 (.I0(B[4]), 
                 .I1(SEL), 
                 .O(XLXN_46));
   AND2  XLXI_16 (.I0(XLXN_75), 
                 .I1(XLXN_17), 
                 .O(XLXN_49));
   AND2  XLXI_17 (.I0(B[5]), 
                 .I1(SEL), 
                 .O(XLXN_50));
   AND2  XLXI_18 (.I0(XLXN_75), 
                 .I1(XLXN_17), 
                 .O(XLXN_52));
   AND2  XLXI_19 (.I0(B[6]), 
                 .I1(SEL), 
                 .O(XLXN_53));
   AND2  XLXI_20 (.I0(XLXN_75), 
                 .I1(XLXN_17), 
                 .O(XLXN_55));
   AND2  XLXI_21 (.I0(B[7]), 
                 .I1(SEL), 
                 .O(XLXN_56));
   INV  XLXI_22 (.I(SEL), 
                .O(XLXN_17));
   OR2  XLXI_23 (.I0(XLXN_38), 
                .I1(XLXN_37), 
                .O(XLXN_57));
   OR2  XLXI_24 (.I0(XLXN_40), 
                .I1(XLXN_39), 
                .O(XLXN_58));
   OR2  XLXI_25 (.I0(XLXN_42), 
                .I1(XLXN_41), 
                .O(XLXN_59));
   OR2  XLXI_26 (.I0(XLXN_44), 
                .I1(XLXN_43), 
                .O(XLXN_60));
   OR2  XLXI_27 (.I0(XLXN_46), 
                .I1(XLXN_45), 
                .O(XLXN_61));
   OR2  XLXI_28 (.I0(XLXN_50), 
                .I1(XLXN_49), 
                .O(XLXN_63));
   OR2  XLXI_29 (.I0(XLXN_53), 
                .I1(XLXN_52), 
                .O(XLXN_62));
   OR2  XLXI_30 (.I0(XLXN_56), 
                .I1(XLXN_55), 
                .O(XLXN_65));
   AND2  XLXI_31 (.I0(RESET), 
                 .I1(XLXN_57), 
                 .O(M_OUT[0]));
   AND2  XLXI_33 (.I0(RESET), 
                 .I1(XLXN_58), 
                 .O(M_OUT[1]));
   AND2  XLXI_34 (.I0(RESET), 
                 .I1(XLXN_59), 
                 .O(M_OUT[2]));
   AND2  XLXI_35 (.I0(RESET), 
                 .I1(XLXN_60), 
                 .O(M_OUT[3]));
   AND2  XLXI_36 (.I0(RESET), 
                 .I1(XLXN_61), 
                 .O(M_OUT[4]));
   AND2  XLXI_37 (.I0(RESET), 
                 .I1(XLXN_63), 
                 .O(M_OUT[5]));
   AND2  XLXI_38 (.I0(RESET), 
                 .I1(XLXN_62), 
                 .O(M_OUT[6]));
   AND2  XLXI_39 (.I0(RESET), 
                 .I1(XLXN_65), 
                 .O(M_OUT[7]));
   GND  XLXI_40 (.G(XLXN_75));
endmodule
