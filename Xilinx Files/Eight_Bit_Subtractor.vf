////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
////////////////////////////////////////////////////////////////////////////////
//   ____  ____ 
//  /   /\/   / 
// /___/  \  /    Vendor: Xilinx 
// \   \   \/     Version : 14.7
//  \   \         Application : sch2hdl
//  /   /         Filename : Eight_Bit_Subtractor.vf
// /___/   /\     Timestamp : 11/16/2022 18:32:31
// \   \  /  \ 
//  \___\/\___\ 
//
//Command: sch2hdl -intstyle ise -family spartan6 -verilog E:/Projects/Xilinx/DigitalDesign_3rd_Year/Eight_Bit_Subtractor.vf -w E:/Projects/Xilinx/DigitalDesign_3rd_Year/Eight_Bit_Subtractor.sch
//Design Name: Eight_Bit_Subtractor
//Device: spartan6
//Purpose:
//    This verilog netlist is translated from an ECS schematic.It can be 
//    synthesized and simulated, but it should not be modified. 
//
`timescale 1ns / 1ps

module HS_MUSER_Eight_Bit_Subtractor(A, 
                                     B, 
                                     RESET, 
                                     BORROW, 
                                     DIFFERENCE);

    input A;
    input B;
    input RESET;
   output BORROW;
   output DIFFERENCE;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_5;
   wire XLXN_7;
   wire XLXN_10;
   
   XOR2  XLXI_1 (.I0(XLXN_5), 
                .I1(XLXN_7), 
                .O(XLXN_1));
   AND2  XLXI_2 (.I0(XLXN_5), 
                .I1(XLXN_10), 
                .O(XLXN_2));
   AND2  XLXI_3 (.I0(XLXN_1), 
                .I1(RESET), 
                .O(DIFFERENCE));
   AND2  XLXI_4 (.I0(XLXN_2), 
                .I1(RESET), 
                .O(BORROW));
   AND2  XLXI_6 (.I0(B), 
                .I1(RESET), 
                .O(XLXN_5));
   AND2  XLXI_8 (.I0(A), 
                .I1(RESET), 
                .O(XLXN_7));
   INV  XLXI_9 (.I(XLXN_7), 
               .O(XLXN_10));
endmodule
`timescale 1ns / 1ps

module Full_Subtracter_MUSER_Eight_Bit_Subtractor(A, 
                                                  B, 
                                                  B_in, 
                                                  RESET, 
                                                  BORROW, 
                                                  DIFF);

    input A;
    input B;
    input B_in;
    input RESET;
   output BORROW;
   output DIFF;
   
   wire XLXN_1;
   wire XLXN_2;
   wire XLXN_3;
   wire XLXN_4;
   wire XLXN_15;
   wire XLXN_16;
   wire XLXN_17;
   
   HS_MUSER_Eight_Bit_Subtractor  XLXI_1 (.A(XLXN_2), 
                                         .B(XLXN_3), 
                                         .RESET(RESET), 
                                         .BORROW(XLXN_17), 
                                         .DIFFERENCE(XLXN_1));
   HS_MUSER_Eight_Bit_Subtractor  XLXI_2 (.A(XLXN_1), 
                                         .B(XLXN_15), 
                                         .RESET(RESET), 
                                         .BORROW(XLXN_16), 
                                         .DIFFERENCE(DIFF));
   OR2  XLXI_3 (.I0(XLXN_17), 
               .I1(XLXN_16), 
               .O(XLXN_4));
   AND2  XLXI_6 (.I0(RESET), 
                .I1(A), 
                .O(XLXN_2));
   AND2  XLXI_7 (.I0(RESET), 
                .I1(B), 
                .O(XLXN_3));
   AND2  XLXI_8 (.I0(RESET), 
                .I1(XLXN_4), 
                .O(BORROW));
   AND2  XLXI_9 (.I0(RESET), 
                .I1(B_in), 
                .O(XLXN_15));
endmodule
`timescale 1ns / 1ps

module Eight_Bit_Subtractor(A, 
                            B, 
                            RESET, 
                            DIFF);

    input [7:0] A;
    input [7:0] B;
    input RESET;
   output [7:0] DIFF;
   
   wire XLXN_2;
   wire XLXN_4;
   wire XLXN_6;
   wire XLXN_8;
   wire XLXN_10;
   wire XLXN_12;
   wire XLXN_14;
   
   HS_MUSER_Eight_Bit_Subtractor  XLXI_1 (.A(A[0]), 
                                         .B(B[0]), 
                                         .RESET(RESET), 
                                         .BORROW(XLXN_2), 
                                         .DIFFERENCE(DIFF[0]));
   Full_Subtracter_MUSER_Eight_Bit_Subtractor  XLXI_2 (.A(A[1]), 
                                                      .B(B[1]), 
                                                      .B_in(XLXN_2), 
                                                      .RESET(RESET), 
                                                      .BORROW(XLXN_4), 
                                                      .DIFF(DIFF[1]));
   Full_Subtracter_MUSER_Eight_Bit_Subtractor  XLXI_3 (.A(A[2]), 
                                                      .B(B[2]), 
                                                      .B_in(XLXN_4), 
                                                      .RESET(RESET), 
                                                      .BORROW(XLXN_6), 
                                                      .DIFF(DIFF[2]));
   Full_Subtracter_MUSER_Eight_Bit_Subtractor  XLXI_4 (.A(A[3]), 
                                                      .B(B[3]), 
                                                      .B_in(XLXN_6), 
                                                      .RESET(RESET), 
                                                      .BORROW(XLXN_8), 
                                                      .DIFF(DIFF[3]));
   Full_Subtracter_MUSER_Eight_Bit_Subtractor  XLXI_5 (.A(A[4]), 
                                                      .B(B[4]), 
                                                      .B_in(XLXN_8), 
                                                      .RESET(RESET), 
                                                      .BORROW(XLXN_10), 
                                                      .DIFF(DIFF[4]));
   Full_Subtracter_MUSER_Eight_Bit_Subtractor  XLXI_6 (.A(A[5]), 
                                                      .B(B[5]), 
                                                      .B_in(XLXN_10), 
                                                      .RESET(RESET), 
                                                      .BORROW(XLXN_12), 
                                                      .DIFF(DIFF[5]));
   Full_Subtracter_MUSER_Eight_Bit_Subtractor  XLXI_7 (.A(A[6]), 
                                                      .B(B[6]), 
                                                      .B_in(XLXN_12), 
                                                      .RESET(RESET), 
                                                      .BORROW(XLXN_14), 
                                                      .DIFF(DIFF[6]));
   Full_Subtracter_MUSER_Eight_Bit_Subtractor  XLXI_8 (.A(A[7]), 
                                                      .B(B[7]), 
                                                      .B_in(XLXN_14), 
                                                      .RESET(RESET), 
                                                      .BORROW(), 
                                                      .DIFF(DIFF[7]));
endmodule
